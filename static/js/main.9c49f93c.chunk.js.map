{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/searchbox/Searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAaeA,MAVf,YAA0B,IAAXC,EAAU,EAAVA,QACb,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCKHC,MATf,YAA+B,IAAZC,EAAW,EAAXA,SAEjB,OACE,qBAAKP,UAAU,YAAf,SACEO,EAASC,KAAI,SAAAT,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,U,MCMlCO,MAXf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,uBACEX,UAAU,SACVY,SAAUD,EACVE,KAAK,SACLH,YAAaA,KCkCJI,G,wDApCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAMnC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA/BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9c49f93c.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./card.styles.css\"\r\n\r\nfunction Card({monster}) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n      <h2>{monster.name}</h2>\r\n      <p>{monster.email}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport \"./card-list.styles.css\"\r\nimport Card from \"../card/Card.component\"\r\n\r\nfunction CardList({monsters}) {\r\n\r\n  return (\r\n    <div className=\"card-list\">\r\n     {monsters.map(monster => <Card key={monster.id} monster={monster}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from \"react\";\r\nimport \"./search-box.css\";\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      onChange={handleChange}\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\nimport CardList from \"./components/card-list/Card-list.component\";\nimport SearchBox from \"./components/searchbox/Searchbox\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}